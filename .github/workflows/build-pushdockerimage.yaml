name: Build and push to container registry

on:
   push:
    branches: [ master ]
env:
    REGISTRY: ghcr.io
    IMAGE_NAME: ${{ github.repository }}

jobs:
    build-run:
     runs-on: ubuntu-latest
     permissions:
      contents: read
      packages: write

     steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Log in to the Container registry
        uses: docker/login-action@v1
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Extract metadata (tags, labels) for Docker
        id: meta
        uses: docker/metadata-action@v1
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}

      - name: Build and push Docker image
        uses: docker/build-push-action@v3
        with:
          context: .
          file: ./helloworld-web/Dockerfile
          push: true
          tags: ${{ steps.meta.outputs.tags }}-v${{ github.run_number }}
          labels: ${{ steps.meta.outputs.labels }}




    helm-deploy:
     needs: build-run
     runs-on: ubuntu-latest
     permissions:
      contents: read
      packages: write
     steps:
      - name: Checkout repository
        uses: actions/checkout@v3
            
      - name: Helm-Installation
        run: |
            sudo apt install openssl -y
            sudo snap install helm --classic
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ap-northeast-1


      - name: Updating kubeconfig to connect to cluster
        run: |
           aws sts get-caller-identity
           aws eks --region ap-northeast-1 update-kubeconfig --name mycluster
           ls -la
           
      - name: Validating Chart 
        run: |
            helm lint kubedeployment/simplechart
            helm template kubedeployment/simplechart

            helm install  release${{ github.run_number }} kubedeployment/simplechart --dry-run
     
      - name: Installation Chart
        run: |
            helm install release-${{ github.run_number }} kubedeployment/simplechart --set labels.versionrelease="v${{ github.run_number }}"
      
      #- name: Blue-Green Ingress deployment
        #run: |
            #kubectl apply -f kubedeployment/blue-ingress.yaml
            #kubectl apply -f kubedeployment/green-ingress.yaml
      
      #- name: publicingress deployment
        #run: |
            #kubectl apply -f kubedeployment/publicingress.yaml
      - name: Map blue ingress and green ingress
        run: |
            export blueversion=${{ github.run_number }}-1;
            kubectl patch ingress blue-hello-world-ingress  -p "{\"spec\": {\"rules\": [{\"host\": \"*.amazonaws.com\",\"http\": {\"paths\": [{\"path\": \"/\",\"pathType\": \"Prefix\",\"backend\": {\"service\": {\"name\": \"hello-world-v$blueversion-service\",\"port\": {\"number\": 80}}}}]}}]}}"
            kubectl patch ingress green-hello-world-ingress  -p "{\"spec\": {\"rules\": [{\"host\": \"*.amazonaws.com\",\"http\": {\"paths\": [{\"path\": \"/\",\"pathType\": \"Prefix\",\"backend\": {\"service\": {\"name\": \"hello-world-v${{ github.run_number }}-service\",\"port\": {\"number\": 80}}}}]}}]}}"


      
